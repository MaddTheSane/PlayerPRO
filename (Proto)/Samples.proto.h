
/* Samples.c */
void DoHelpSamples(short **, short *);
void SetSelectionZero(short);
void SetSelection(short, long, long);
void EraseTikTak(short);
void DoGrowSample(DialogPtr);
void UpdateDisplaySize(short);
void UpdateDisplay(short);
void UpdateDisplayQuality(short);
void UpdateDisplayLoop(short);
long FindByteStart(short);
short ByteToPos(long, short);
long PosToByte(short, short);
void GetSampleRect(DialogPtr);
long FindByteEnd(short);
void Selection2Loop(short);
void SetSustainPoint(short);
void Loop2Selection(short);
void UpdateDisplaySelec(short);
void COPYSampleInt(DialogPtr);
void PASTESampleInt(DialogPtr);
void AfficheOldPoint(short);
void DoNullInstrument(void);
short FindSample(DialogPtr);
void DrawLoop(short);
void UpdateSampleWindow(DialogPtr);
void DrawPencil(DialogPtr, short);
void DrawEnveloppe(short, DialogPtr);
void DrawSampleInt(long, long, long, long, long, long, long, long, short, sData *);
void DrawSample(short, short, short, DialogPtr);
void InitSampleWindow(void);
void SetControlH(short);
void InternalUpdate(short);
void UpdateSampleWindows(void);
void NCreateSampleWindow(short, short);
void CloseSampleWindow(DialogPtr);
void NAppelPlug(short, short, short);
pascal void actionProcSample(ControlHandle, short);
void DoItemPressSample(short, DialogPtr);
void DoKeyPressSample(DialogPtr, short);
void PrintSample(DialogPtr);
void ResetSelectionSample(short);
pascal OSErr MyTrackingSample(short, WindowPtr, void *, DragReference);
Boolean DragSample(RgnHandle, short, EventRecord *);
