/* InstruList.c */void DoHelpInstruList(short **, short *);Ptr MyExp1to3(Ptr, unsigned long);Ptr MyExp1to6(Ptr, unsigned long);Ptr NSndToPtr(Ptr, long *, long *, short *, unsigned long *, long *, Boolean *);void DrawBottomInfo(void);void ActiveInstrumentMenu(Boolean);void DoGrowInstruList(DialogPtr);void GetQualityString(short, Str255);void AutoPosition(DialogPtr);void DrawSmallPianoKey(short, short, Rect);void NInitSmallPiano(Rect, Rect *);void DrawWhatSample(short, short);void NPressSmallPiano(short, DialogPtr, short);void UpdateEditInstruWindow(DialogPtr);void ChangeDialogFont(DialogPtr);pascal void actionProcInstru(ControlHandle, short);void ShowSampleData(DialogPtr);OSErr CloseInstruData(DialogPtr);OSErr CloseSampleData(DialogPtr);void NEditInstruInfo(short, short);void DoPlayInstruInt(short, short, short, short, short, Channel *, long, long);void NDoPlayInstru(short, short, short, short, short);void DoKeyPlay(short);void CreateInstruList(void);void FreeInstruList(short);void PaintInstruList(short, short);void PaintArrowList(short, short);void DoNullInstruList(void);void ConvertIDtoInsSamp(short, short *, short *);short ConvertInsSampToID(short, short);short ComputeMaxY(void);void DrawInstruListItem(short);void DrawSmallSamplePreview(void);void UpdateInstruListWindow(DialogPtr);void EraseSampleInfo(void);void EraseInstrumentInfo(void);void NSelectInstruList(short, short);void DrawInfoInstrument(void);Boolean DragInstruSelect(void);Boolean IsMyTypeAvailable(DragReference);pascal OSErr MyTrackingHandler(short, WindowPtr, void *, DragReference);pascal OSErr MyReceiveDropHandler(WindowPtr, void*, DragReference);void ErreurFileName(short, Str255, OSErr);pascal OSErr MySendDataProc(FlavorType, void *, ItemReference, DragReference);Boolean DragInstrument(RgnHandle, short, EventRecord *);void CreateInstruListWindow(void);void CloseInstruListWindow(void);Boolean GetIns(short *, short *);void DoItemPressInstruList(short, DialogPtr);void DoKeyPressInstruList(short, short);void PASTEInstruList(void);void SaveInstrumentsList(void);OSErr OpenInstrumentsList(FSSpec *);